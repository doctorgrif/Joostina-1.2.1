##
# @version $Id: htaccess.txt 5973 2006-12-11 01:26:33Z robs $
# @package Joostina
# @copyright Авторские права (C) 2007 Joostina Team.
# @localized Авторские права (C) 2005 Joom.Ru - Русский дом Joomla!
# @copyright Авторские права (C) 2005 Open Source Matters. Все права защищены.
# @license http://www.gnu.org/copyleft/gpl.html GNU/GPL
# Joomla! - свободное программное обеспечение.
# @translator Sourpuss (Sourpuss@mail.ru)
# @upd doctorgrif (artem.grafov@gmail.com)
##
# -== ВНИМАНИЕ! Обязательно установите chmod 644 на этот файл ==-
## [core]
## Установка кодировки сайта по умолчанию.
AddDefaultCharset WINDOWS-1251
## Устанавливает кодировку utf-8 для следующих форматов файлов.
AddCharset UTF-8 .css .js
## Следующие строки - попытка исправить настройки PHP для полного соответствия системным требованиям Joostina.
## Раскомментируйте нужные строки, если настройки вашего хоста не соответствуют рекомендациям системных
## требований Joostina.
## При возникновении 500 ошибки сервера, закомментируйте строку, вызывающую ошибку, или все строки с php_value.
# php_value register_globals 0
# php_value display_errors 1
# php_value error_reporting 2047
# php_value memory_limit 64M
# php_value file_uploads 1
php_value magic_quotes_gpc 1
# php_value magic_quotes_runtime 0
# display no errors to user
# php_flag display_startup_errors off
# php_flag display_errors off
# php_flag html_errors off
# log to file
# php_flag log_errors on
# php_value error_log /administrator/php_error.log
## Пример явного указания каталога для записи сессий: Для Windows - c:/temp; для UNIX - /tmp
## Указанные каталоги должны физически существовать и быть доступны для записи.
## При необходимости, раскомментируйте строку ниже этой
# php_value session.save_path c:/temp
## Может быть закомментировано, если вызывает ошибку сервера.
Options +FollowSymLinks
## Может быть закомментировано, если вызывает ошибку сервера.
Options -MultiViews 
## Может быть закомментировано, если вызывает ошибку сервера.
Options -Indexes
## Включение mod_rewrite
RewriteEngine On
## Запрет по маске доступа к htaccess и htpasswd
# <Files ~ "^\.(htaccess|htpasswd)$">
# deny from all
# </Files>
## Запрет по маске доступа к просмотру позиций шаблона
# <Files ~ "\.tpl$">
# Order allow,deny
# Deny from all
# </Files>
## Код запрета доступа к xml-файлам расширений
#<Files ~ "\.xml$">
#Order allow,deny
#Deny from all
#Satisfy all
#</Files>
## Эти строки указывают серверу, что необходимо запретить выполнение скриптов в корне, кроме файла index.php.
## Если хакеру удастся загрузить в корень сайта бэкдор, он не сможет его выполнить на сервере.
# <Filesmatch ".(php)$">
# order deny,allow
# deny from all
# </Filesmatch>
# <Filesmatch "^index.php">
# order allow,deny
# allow from all
# </Filesmatch>
# <Filesmatch "^index2.php">
# order deny,allow
# allow from all
# </Filesmatch>
## Однако, хакер может загрузить бэкдор с именем index.php в подкаталог в корне сервера, где он будет выполняться. 
## Поэтому во все подкаталоги первого уровня от корня необходимо поместить файл .htaccess нижеследующего содержания.
## Необходимо предварительно протестировать данное решение для каждой папкив отдельности чтобы не заблокировать
## необходимый функционал
# <Files ~ ".(php)$">
# Deny from all
# </Files>
## запрещаем /proc/self/environ в запросе
RewriteCond %{QUERY_STRING} proc\/self\/environ [OR]
## Отключаем возможность просмотра позиций модулей
# RewriteCond %{QUERY_STRING} tp(=1) [OR]
## Защита от загрузки файла. Может вызвать проблемы!
# RewriteCond %{REQUEST_METHOD} GET
# RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]\=http:\/\/(.*)
# RewriteRule ^(.*)$ index.php [F,L]
## Запрещаем доступ к файлам php и xml в каталогах с расширениями
RewriteCond %{REQUEST_FILENAME} -f
RewriteCond %{REQUEST_URI} \.php|\.xml [NC]
## следующая строка закомментирована ибо с ней не работает чат
# RewriteCond %{REQUEST_URI} \/components\/ [OR]
RewriteCond %{REQUEST_URI} ^\/includes\/|^\/administrator\/includes\/ [OR]
RewriteCond %{REQUEST_URI} \/language\/ [OR]
# следующая строка может вызывать проблемы на разных серверах, поэтому по умолчанию она закомментирована,
## однако стоит попробовать их включить.
# RewriteCond %{REQUEST_URI} \/modules\/ [OR]
## следующие строки могут вызывать проблемы на разных серверах, поэтому по умолчанию они взакомментированы,
## однако стоит попробовать их включить.
# RewriteCond %{REQUEST_URI} \/mambots\/ [OR]
# RewriteCond %{REQUEST_URI} \/templates\/ [OR]
# RewriteRule ^(.*)$ index.php [R=404,L]
## Блокируем наиболее распространенные SQL-инъекции
RewriteCond %{query_string} concat.*\( [NC,OR]
RewriteCond %{query_string} union.*select.*\( [NC,OR]
RewriteCond %{query_string} union.*all.*select [NC]
## следующая строка может вызывать проблемы на разных серверах, поэтому по умолчанию она закомментирована,
## однако стоит попробовать ее включить.
# RewriteRule ^(.*)$ index.php [F,L]
## Блокируем наиболее распространенные средства взлома
RewriteRule ^([A-z0-9/_-]*)$ index.php [L,QSA]
SetEnvIf user-agent "Indy Library" stayout=1
SetEnvIf user-agent "libwww-perl" stayout=1
SetEnvIf user-agent "Wget" stayout=1
## следующая строка может вызывать проблемы на разных серверах, поэтому по умолчанию она закомментирована,
## однако стоит попробовать ее включить.
# deny from env=stayout
## [bots block]
# Блокировать любой запрос, пытающийся установить значение mosConfig через URL
RewriteCond %{QUERY_STRING} mosConfig_[a-zA-Z_]{1,21}(=|\%3D) [OR]
# Блокировать любой запрос, пытающийся испортить base64_encode через URL
RewriteCond %{QUERY_STRING} base64_encode.*\(.*\) [OR]
# Блокировать любой запрос, содержащий тег <script> в URL
RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
# Блокировать любой запрос, пытающийся установить значение глобальных переменных PHP через URL
RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
# Блокировать любой запрос, пытающийся изменить _REQUEST переменную через URL
RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})
# Перенаправлять заблокированные запросы на страницу 403 с запрещенными ошибками!
RewriteRule ^(.*)$ index.php [F,L]
## Custom redirects
# If you need to redirect some pages, or set a canonical non-www to www redirect (or vice versa),
# place that code here. Ensure those redirects use the correct RewriteRule syntax and the [R=301,L] flags.
#Склеивание доменов с www и без www (а также "зеркал")
#Редирект с адреса yoursitename.ru на www.yoursitename.ru
# Для включения удалите раскомментируйте следующие 2 строки и подставьте свой адрес сайта.
# RewriteCond %{HTTP_HOST} !^www.yoursitename.ru$ [NC] 
# RewriteRule ^(.*)$ http://www.yoursitename.ru/$1 [L,R=301] 
## End Custom redirects
## Раскомментируйте следующую строку, если URL вашего web-сервера не связаны напрямую с физическими путями файлов.
## Обновите Ваш каталог Joostina (используйте "/" для обозначения корня сервера)
# RewriteBase /
## [sef]
## Решение проблемы с неработающими url компонентов (специальное примечание для пользователей SMF,
## использующих мост интеграции или для тех случаев, когда не работают url компонентов).
## В обоих разделах Стандартного SEF, и SEF сторонних разработчиков или Core SEF
## строка RewriteCond %{REQUEST_URI} ^(/component/option,com) [NC,OR] может быть раскомментирована.
## Если ваша Joostina работает в подкаталоге, то в эту строку можно вставить название подкаталога.
## Например, если ваша Joostina находится в подкаталоге '/test/',
## то измените RewriteCond %{REQUEST_URI} ^(/component/option,com) [NC,OR]
## на RewriteCond %{REQUEST_URI} ^(/test/component/option,com) [NC,OR]
## Стандартный SEF.
## Используйте эту секцию ТОЛЬКО для работы встроенного SEF Joostina. ВСЕ (RewriteCond) строки в этой секции
## необходимы только если на вашем сервере имеются каталоги с названиями content/ или component/.
## Если каталоги с такими названиями отсутствуют, то закомментируйте эти строки.
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
# RewriteCond %{REQUEST_URI} ^(/component/option,com) [NC,OR] ## опционально - см. примечания ##
RewriteCond %{REQUEST_URI} (/|\.htm|\.php|\.html|/[^.]*)$ [NC]
RewriteRule ^(view/|content/|component/) index.php
## SEF сторонних разработчиков или Core SEF.
## Используйте этот раздел, если вы используете SEF-расширения типа sh404SEF, JPromoter, Atrio JoomSEF и т.д.
# RewriteCond %{REQUEST_URI} ^(/component/option,com) [NC,OR] ## опционально - см. примечания ##
# RewriteCond %{REQUEST_URI} (/|\.htm|\.php|\.html|/[^.]*)$ [NC]
# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteCond %{REQUEST_FILENAME} !-d
# RewriteRule (.*) index.php
## [cache and optimize]
<FilesMatch "\.(js|css)$">
SetOutputFilter DEFLATE
</FilesMatch>
# 480 недель
<FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf)$">
Header set Cache-Control "max-age=290304000, public"
Header set Expires "Thu, 15 Apr 2017 20:00:00 GMT"
</FilesMatch>
# 2 дня
<FilesMatch "\.(xml|txt)$">
Header set Cache-Control "max-age=172800, public, must-revalidate"
</FilesMatch>
# 2 часа
<FilesMatch "\.(html|htm)$">
Header set Cache-Control "max-age=7200, must-revalidate"
</FilesMatch>
# Header unset ETag
# FileETag None
<FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif)$">
Header unset Last-Modified
</FilesMatch>
## [apache secure]
# ServerSignature Off